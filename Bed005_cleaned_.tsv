"me003"	::Yeah, I think I got my mike on.	::	0
"me003"	::O_K.	::	0
"me003"	::Let's see.	::	0
"me010"	::O_K. Ami, do yours then we'll open it and I think it'll be enough.	::	0
"me003"	::Mmm Doesn't, uh It should be the other way. Yeah, now it's on.	::	0
"mn036"	::Right. O_K.	::	0
"me010"	::O_K. So, we all switched on?	::	0
"me003"	::We are all switched on, yeah.	::	0
"me010"	::Alright. Anyway. So, uh, before we get started with the, uh, technical part, I just want to review what I think is happening with the	::	0
"mn036"	::We are all switched on.	::	0
"me010"	::our data collection. So	::	0
"me010"	::Uh, probably after today,	::	0
"me010"	::that shouldn't come up in this meeting. this this is should be it isn't There's another thing going on of gathering data,	::	0
"me010"	::and that's pretty much independent of this.	::	0
"me010"	::But, uh, I just want to make sure we're all together on this.	::	0
"me010"	::What we think is gonna happen is that,	::	1
"me010"	::uh, in parallel starting about now we're gonna get Fey	::	0
"me010"	::to,	::	1
"me010"	::where you're working with me and Robert, draft a note that we're gonna send out to various CogSci and other classes saying, "here's an opportunity to be a subject.	::	1
"me010"	::Contact Fey."	::	0
"me010"	::And then there'll be a certain number of um, hours during the week which she will be available and we'll bring in	::	0
"me010"	::people. Uh, roughly how many, Robert?	::	0
"me010"	::We Do we know?	::	0
"mn015"	::Um, fifty was our sort of our first	::	0
"me010"	::O_K. So, we're looking for a total of fifty people, not necessarily by any means all students but we'll we'll start with with that.	::	1
"me010"	::In parallel with that, we're gonna need to actually do the script.	::	1
"me010"	::And, so, I guess there's a plan to have a meeting Friday afternoon	::	0
"me010"	::Uh, with uh, Jane, and maybe Liz and whoever, on actually getting the script worked out.	::	0
"me010"	::But what I'd like to do, if it's O_ K,	::	1
"me010"	::is to	::	0
"me010"	::to, as I say, start the recruiting in parallel and possibly start running subjects next week.	::	1
"me010"	::The week after that's Spring Break, and maybe we'll look for them some subjects next door or	::	0
"mn015"	::Yeah.	::	0
"mn015"	::Yeah. Also, Fey will not be here during spring break. So.	::	0
"me010"	::Oh, O_K, then we won't do it. O_K. So that's easy.	::	0
"me010"	::Um.	::	0
"me010"	::So, is Is that	::	0
"me010"	::make sense to everybody?	::	0
"mn015"	::Yeah. Also, um, both Fey and I will, um,	::	0
"mn015"	::do something of which I may, eh	::	0
"mn015"	::kindly ask you to to do the same thing, which is we gonna check out our social infrastructures for possible subjects. Meaning,	::	1
"mn015"	::um, kid children's gymnastic classes, pre-school parents and so forth.	::	0
"mn015"	::They also sometimes have flexible schedules.	::	0
"mn015"	::So, if you happen to be sort of in a non-student social setting, and you know people who may be interested in being subjects	::	0
"mn015"	::We also considered using the Berkeley High School and their teachers, maybe,	::	0
"mn015"	::and get them interested in	::	0
"me010"	::That's a good idea.	::	0
"mn015"	::stuff.	::	0
"mn015"	::And, um.	::	0
"mn015"	::So that's as far as our brainstorming was concerned.	::	0
"me010"	::Oh, yeah. The high school's a great idea.	::	0
"mn015"	::So.	::	0
"mn015"	::But I I will just make a first draft of the, uh, note, the "write-up" note, send it to you and Fey and then	::	0
"me010"	::And why don't you also copy Jane on it?	::	0
"mn015"	::And, um,	::	0
"mn015"	::Are we Have we concurred that, uh, these these forms are sufficient for us, and necessary?	::	0
"me010"	::Uh, I think they're necessary.	::	0
"me010"	::This The permission form.	::	1
"mn015"	::Mmm. Nuh.	::	0
"me010"	::Uh, there has to be one, and I think we're just gonna use it as it is, and	::	1
"mn015"	::N_.	::	0
"me010"	::Um	::	0
"mn015"	::You happy with that?	::	0
"me010"	::Well, yeah. There's one tricky part	::	0
"me010"	::about,	::	0
"me010"	::um, they have the right	::	0
"me010"	::um	::	0
"me010"	::The last paragraph "if you agree to participate you have the opportunity to have anything excised which you would prefer not to have included in the data set."	::	0
"me010"	::O_K? Now that, had to be included for this	::	0
"me010"	::other one which might have, uh, meetings, you know, about something. In this case, it doesn't really make sense.	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::Um, so what I'd like to do	::	1
"me010"	::is also have our subjects sign a waiver	::	1
"me010"	::saying "I don't want to see the final transcript".	::	1
"mn015"	::Mm-hmm.	::	0
"me010"	::And if they don't If they say "no, I'm not willing to sign that", then we'll show them the final transcript. But, um.	::	0
"mn015"	::Yep. Makes sense.	::	0
"me010"	::That, uh	::	0
"me010"	::yeah, so we might actually, um	::	0
"me010"	::Jane may say that, "you know, you can't do this", uh,	::	0
"me010"	::"on the same form, we need a separate form." But anyway. I'd I'd I'd like to,	::	0
"me010"	::um, add a little eh a thing for them to initial, saying "nah, I don't want to see the final transcript." But other than that, that's one's been approved,	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::this really is the same project,	::	0
"me010"	::uh, you know. And so forth. So I think we just go with it.	::	0
"mn015"	::Yeah.	::	0
"mn015"	::Yeah.	::	0
"mn015"	::O_K.	::	0
"mn015"	::So much for the data,	::	0
"mn015"	::except that with Munich everything is fine now.	::	1
"mn015"	::They're gonna transcribe. They're also gonna translate the, uh, German data from the	::	1
"mn015"	::T_V and cinema stuff for Andreas. So.	::	1
"mn015"	::They're they all seem to be happy now,	::	0
"mn015"	::with that.	::	0
"mn015"	::So. should we move on to the technical sides?	::	0
"me010"	::Yep.	::	0
"mn015"	::Well I guess the good good news of last week was the parser.	::	0
"mn015"	::So, um	::	0
"mn015"	::Bhaskara and I started working on the	::	0
"mn015"	::the parser. Then Bhaskara went to class and once he came back, um,	::	0
"mn015"	::it was finished.	::	0
"mn015"	::So.	::	0
"mn015"	::It, uh I didn't measure it, but it was about an hour and ten minutes.	::	0
"me012"	::Yep. Something like that.	::	0
"mn015"	::And, um and now it's We have a complete English parser that does everything the German parser does.	::	1
"me010"	::Which is not a lot. But	::	0
"me012"	::That's the, uh, point.	::	0
"mn015"	::The uh, that's not a lot.	::	0
"me010"	::O_K.	::	0
"me012"	::Yes.	::	0
"me010"	::Right.	::	0
"mn015"	::And um.	::	0
"fe004"	::What did you end up having to do? I mean, Was there anything	::	0
"mn015"	::Well, if you, eh	::	0
"me012"	::We'll show you.	::	0
"fe004"	::interesting about it at all? or are we gonna see that?	::	0
"me010"	::Yeah, we can show us, right?	::	0
"mn015"	::Well,	::	0
"mn015"	::We The first we did is we we tried to to do change the the "laufen" into "run", or "running", or "runs".	::	0
"me010"	::Yep.	::	0
"fe004"	::Mm-hmm.	::	0
"mn015"	::And we noticed that whatever we tried to do, it no effect.	::	0
"fe004"	::O_K.	::	0
"mn015"	::And we were puzzled.	::	0
"fe004"	::Mm-hmm.	::	0
"mn015"	::And, uh, the reason was that the parser	::	1
"mn015"	::completely ignores the verb.	::	1
"fe004"	::Hmm. Interesting parser property.	::	0
"mn015"	::So this sentence	::	0
"mn015"	::sentence is	::	0
"mn015"	::parses the the same output,	::	0
"mn015"	::um, even if you leave out, um,	::	0
"fe004"	::I see. Yeah.	::	0
"mn015"	::all all of this. So it's basically feature film and T_V.	::	0
"fe004"	::Today O_K. And the and the time, right?	::	0
"mn015"	::That's what you need.	::	0
"mn015"	::If if you'd add add Today and Evening, it'll add Time or not. So it it does look at that. But all the rest is simply frosting on the cake,	::	0
"fe004"	::O_K.	::	0
"mn015"	::and it's optional for that parser.	::	0
"fe004"	::True.	::	0
"mn015"	::And	::	0
"me010"	::So, you can You you Are are you gonna show us the little templates?	::	0
"fe004"	::	::	0
"mn015"	::Yeah. We we can er I can show you the templates.	::	0
"fe004"	::"The former end g-" Oh, I see. Uh-huh.	::	0
"mn015"	::I I also have it running here, so if I	::	0
"mn015"	::do this now,	::	0
"mn015"	::um, you can see that	::	0
"mn015"	::it parsed the wonderful English sentence, "Which films are on the cinema today evening?"	::	0
"me010"	::Well, that sounds	::	0
"mn015"	::But, um.	::	0
"mn015"	::Uh don't worry about it. It could be	::	0
"me010"	::No	::	0
"mn015"	::" this evening, which which films are on the cinema", or "running in the cinema, which	::	0
"fe004"	::O_K.	::	0
"mn015"	::uh, "today evening", uh	::	0
"mn015"	::"Is anything happening in the cinema this evening?"	::	0
"fe004"	::O_K. Key words, basically.	::	0
"me010"	::Well	::	0
"mn015"	::elaborate, or, more or less, uh	::	0
"me010"	::Actually, it's a little tricky,	::	0
"me010"	::in that there's some	::	0
"me010"	::allowable German orders which aren't allowable English orders and so forth. And it is order-based. So it it	::	0
"me010"	::Isn't it?	::	0
"me012"	::No.	::	0
"mn015"	::No.	::	0
"me010"	::Oh. So it it it These	::	0
"me010"	::these optional elements, it's it's actually a set, not a sequence?	::	0
"mn015"	::It is not	::	0
"mn015"	::Yeah. We were I was afraid that, um	::	0
"me010"	::Oh!	::	0
"fe004"	::So it really is key word matching, basically.	::	1
"me010"	::Really a	::	0
"mn015"	::Um.	::	0
"mn036"	::yeah. Mm-hmm.	::	0
"me010"	::Oh, wow.	::	0
"mn015"	::Um, I mean, these sentences are just silly. I mean, uh, these were not the ones we we actually did it.	::	0
"fe004"	::Hmm.	::	0
"mn015"	::Um. What's an idiomatic of phrasing this? Which films are	::	0
"me012"	::Are playing at the cinema?	::	0
"mn015"	::showing? playing?	::	0
"me012"	::Yeah.	::	0
"fe004"	::Tonight?	::	0
"me012"	::I changed that file, actually, where it's on my account.	::	0
"mn036"	::Actually, you would say, "which films are on tonight?"	::	0
"fe004"	::This this evening?	::	0
"me012"	::You want to get it? Or is was it easy to get it?	::	0
"mn015"	::Um. I have no net here.	::	0
"me012"	::Oh, O_K.	::	0
"me010"	::Do I?	::	0
"mn015"	::O_K. So. Wonderful parse, same thing.	::	0
"mn015"	::Um.	::	0
"me010"	::Right.	::	0
"mn015"	::Except that we we don't have this, uh, time information here now, which is,	::	0
"mn015"	::um	::	0
"mn015"	::Oh. This are the reserve.	::	0
"mn015"	::Anyways.	::	0
"mn015"	::So.	::	0
"mn015"	::Um.	::	1
"mn015"	::These are the sort of the ten different sentence types	::	1
"mn015"	::that the uh	::	0
"mn015"	::the parser was able to do. And it still is, now in English.	::	1
"fe004"	::Mm-hmm.	::	0
"me010"	::Yeah.	::	0
"mn015"	::And, um Sorry.	::	0
"mn015"	::And, um	::	0
"mn015"	::you have already to make it a little bit more elaborate, right?	::	0
"me012"	::Yeah, I mean I changed those sentences to make it, uh,	::	0
"me012"	::more, uh, idiomatic.	::	1
"me012"	::And, of course, you can have	::	0
"me012"	::many variations in those sentences, they will still parse fine.	::	1
"me012"	::So, in a sense it's pretty broad.	::	0
"me010"	::O_K.	::	0
"mn015"	::O_K.	::	0
"mn015"	::So, if you want to look at the templates,	::	0
"mn015"	::they're conveniently located in a file, "template".	::	0
"mn015"	::Um,	::	0
"mn015"	::and this is what I had to do. I had to change,	::	0
"mn015"	::"Spielfilm" to "film", uh, "Film" to "movie", "Kino" to "cinema"	::	0
"mn015"	::"today" "heute" to "today", evening "Abend" to "evening"	::	0
"fe004"	::Huh.	::	0
"me010"	::Capitalized as well	::	0
"me003"	::Hmm.	::	0
"mn015"	::And, um.	::	0
"me010"	::	::	0
"me012"	::One thing I was wondering, was,	::	1
"me012"	::those functions there, are those things that modify the M_-three-L_ basically?	::	1
"mn015"	::Yep.	::	1
"me012"	::O_K.	::	0
"mn015"	::And that's that's the next step, but we'll get to that in a second.	::	0
"me010"	::	::	0
"mn015"	::And so this means, um,	::	0
"me010"	::Oh.	::	0
"mn015"	::"this" and "see" are not optional.	::	0
"mn015"	::"Want I like" is all maybe in there, but may also not be in there.	::	0
"me010"	::So so, the point is, if it says " this " and " see ", it also will work in " see " and " this "?	::	0
"fe004"	::	::	0
"me010"	::In the other order?	::	0
"mn015"	::Yeah.	::	0
"me010"	::with those two key words?	::	0
"mn015"	::Should we try it?	::	0
"me010"	::"This is the one I want to see"	::	0
"me010"	::or whatever.	::	0
"mn015"	::O_K.	::	0
"mn015"	::"Action watch",	::	0
"me012"	::Hmm.	::	0
"mn015"	::whatever. Nothing was specified.	::	0
"mn015"	::except that it has some references to audio-visual media here.	::	0
"me012"	::A_V medium.	::	0
"me012"	::Yeah.	::	0
"mn015"	::Where it gets that from It's correct, but I don't know where it gets it from.	::	0
"me012"	::" See ".	::	0
"mn015"	::Oh, " see ". Yeah.	::	0
"me012"	::I mean it's sort of	::	0
"mn015"	::Yeah. Yep. O_K.	::	0
"mn015"	::And "see this"	::	0
"mn015"	::is exactly the same thing.	::	0
"me010"	::O_K, so it is set-based. Alright.	::	0
"me012"	::One thing I was wondering was,	::	1
"me012"	::those percentage signs, right?	::	1
"me012"	::So, I mean,	::	0
"me012"	::why do we even have them? Because if you didn't have them	::	0
"mn015"	::Yep.	::	0
"mn015"	::Uh, I'll tell you why. Because it gives a you a score.	::	0
"fe004"	::Mm-hmm.	::	0
"me012"	::Oh.	::	0
"mn015"	::And the value of the score is, I assume,	::	1
"mn015"	::I guess, the more of these optional things that are actually in there, the higher the score	::	1
"me012"	::O_K.	::	0
"mn036"	::Right.	::	0
"fe004"	::It's a match.	::	0
"me012"	::So that's the main purpose. Alright.	::	0
"mn015"	::it is.	::	1
"fe004"	::Mm-hmm.	::	0
"me010"	::O_K.	::	0
"mn015"	::So we we shouldn't belittle it too much. It's doing something,	::	0
"mn015"	::some things,	::	0
"mn015"	::and it's very flexible.	::	0
"mn015"	::I've just tried to	::	0
"fe004"	::Mm-hmm.	::	0
"mn036"	::Right.	::	0
"mn015"	::be nice.	::	0
"me010"	::No, no. Fine. Yeah, yeah, yeah, flexible it is.	::	0
"fe004"	::Right Yeah.	::	0
"mn036"	::But	::	0
"mn015"	::O_K.	::	1
"mn015"	::Um, let's hope that the generation will not be more difficult, even though the generator is a little bit more complex.	::	1
"mn015"	::Uh but we'll	::	0
"mn015"	::Mmm,	::	0
"mn015"	::that means we may need two hours and twenty minutes rather than an hour ten minutes,	::	0
"me010"	::Alright.	::	0
"me012"	::Right.	::	0
"mn015"	::I hope.	::	0
"mn015"	::And the next thing I would like to be able to do, and it seems like this would not be too difficult either, is	::	1
"mn015"	::to say, "O_K let's now pretend we actually wanted to not only change the	::	1
"mn015"	::the mapping of of, uh, words to the M_-three-L_ but we also wanted to change add a new sentence type and and make up some some new M_-three-L_ s-"	::	1
"me010"	::Yep.	::	0
"me010"	::	::	0
"me010"	::That'd be great. It would be a good exercise to just see	::	0
"mn015"	::See	::	0
"me010"	::whether one can get that to run.	::	0
"mn015"	::Mm-hmm.	::	0
"mn015"	::Yep.	::	0
"mn015"	::And, um,	::	0
"me012"	::So, that's Fine, yeah.	::	0
"mn015"	::that's shouldn't be too tough.	::	0
"me012"	::Yeah, so where are those those functions "Action", "Goodbye", and so on, right? Are they actually, um,	::	1
"me012"	::Are they going to be called? Um, are they present in the code for the parser?	::	1
"mn015"	::Yeah. I think what it does, it it does something sort of fancy. It loads	::	0
"mn015"	::um	::	0
"mn015"	::It has these style sheets and also the, um,	::	0
"mn015"	::schemata.	::	0
"mn015"	::So what it probably does, is it takes the, uh,	::	0
"mn015"	::um	::	0
"mn015"	::Is this where it is? This is already the X_M_L stuff?	::	0
"mn015"	::This is where it takes its own, um, syntax,	::	0
"mn015"	::and converts it somehow.	::	0
"mn015"	::Um.	::	0
"mn015"	::Where is the uh	::	0
"me012"	::What are you looking for?	::	0
"mn015"	::Um, where it actually produces the the X_M_L out of the, uh, parsed stuff.	::	0
"me012"	::Oh, O_K.	::	0
"mn015"	::No, this is not it.	::	0
"mn015"	::Uh. I can't find it now.	::	0
"mn015"	::You mean, where the where the how the action "Goodbye"	::	0
"mn015"	::maps into something	::	0
"me012"	::Yeah.	::	0
"me003"	::Yeah, where are those constructors defined?	::	0
"me012"	::Oh.	::	0
"me012"	::No, that's not it.	::	0
"mn015"	::Nope.	::	0
"mn015"	::Yeah.	::	0
"mn015"	::This is sort of what happens.	::	0
"mn015"	::This is what you would need to to change to get the, uh, X_M_L changed.	::	0
"mn015"	::So when it encounters "Day",	::	0
"mn015"	::it will, uh,	::	0
"mn015"	::activate those classes in the in the X_M_L stuff	::	0
"mn015"	::But, um	::	0
"mn015"	::I saw those actions uh, the "Goodbye" stuff somewhere.	::	0
"mn015"	::Hmm, hmm, hmm, hmm, hmm.	::	0
"me003"	::Grep for it?	::	0
"mn015"	::Yeah.	::	0
"mn015"	::Let's do that.	::	0
"mn015"	::Oh.	::	0
"me012"	::Mmm.	::	0
"me012"	::M_-three-L_ dot D_T_D?	::	0
"mn015"	::Yep.	::	0
"me012"	::That's just a	::	0
"me012"	::specification for the X_M_L	::	0
"mn015"	::Yep.	::	0
"me012"	::format.	::	0
"mn015"	::Well, we'll find that out.	::	1
"mn015"	::So whatever this does I mean this is, basically, looks to me like a function call, right?	::	0
"me010"	::Hmm? Oh, yeah.	::	0
"mn015"	::And, um	::	0
"mn015"	::So, whenever it it encounters "Goodbye",	::	0
"mn015"	::which we can make it do in a second, here	::	0
"me003"	::That function automatically generates an initialized	::	0
"me003"	::X_M_L structure?	::	0
"me012"	::I think each of those functions act on the current X_M_L structure, and	::	1
"mn015"	::	::	0
"me012"	::change it in some way, for example, by adding a	::	1
"me010"	::	::	0
"me012"	::a a field to it, or something.	::	1
"me010"	::Yeah. They also seem to affect state, cause some of them	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::there were other actions	::	1
"me012"	::Right.	::	0
"me010"	::uh, that that seemed to step state variables somewhere, like the " Discourse Status Confirm".	::	1
"mn015"	::Yep.	::	0
"me010"	::O_K. So that's going to be a call on the discourse and confirm that it's	::	0
"mn015"	::Mm-hmm	::	0
"me012"	::Oh, you mean that's not going to actually modify the tree, but it's going to change the event. Oh. Oh.	::	0
"me010"	::I think that's right. I think it's actually That looks like it's state modification.	::	0
"mn015"	::	::	0
"mn015"	::mmm	::	0
"mn015"	::Um, well	::	0
"me012"	::When there's a feature.	::	0
"mn015"	::There is a feature called "Discourse-Status",	::	0
"me010"	::Yeah.	::	0
"mn015"	::And so whenever I just say, "Write",	::	0
"mn015"	::it will it will put this in here.	::	0
"me010"	::Oh, so it always just Is it So it	::	0
"me010"	::Well, go back, then, cuz it may be that all those things,	::	0
"mn015"	::	::	0
"me010"	::while they look like function calls, are just	::	0
"me010"	::a way of adding exactly that to the X_M_L.	::	0
"mn015"	::Yep.	::	0
"me010"	::Uh-huh!	::	0
"me010"	::I'm not I'm not sure.	::	0
"mn015"	::So, this	::	0
"me010"	::I'm not sure that	::	0
"mn015"	::Um well, we we'll see, when we say,	::	0
"mn015"	::let's test something,	::	0
"mn015"	::"Goodbye",	::	0
"mn015"	::causes it to to create basically an "Action Goodbye-End-Action". Which is a means of telling the system to shut down.	::	0
"me010"	::Right.	::	0
"me010"	::Right.	::	0
"mn015"	::Now, if we know that "Write"	::	0
"mn015"	::produces a "Feature Discourse-Status Confirm Discourse-Status".	::	0
"mn015"	::So if I now say "Write,	::	0
"mn015"	::Goodbye,"	::	0
"mn015"	::it should do that.	::	0
"mn015"	::It it creates this,	::	0
"me012"	::Mm-hmm.	::	0
"me010"	::Right.	::	0
"mn015"	::"Confirm Goodbye".	::	0
"me012"	::Right there.	::	0
"me010"	::Yep.	::	0
"me012"	::But there is some kind of function call, because how does it know to put Goodbye in Content, but, uh, Confirm in Features?	::	0
"me012"	::	::	0
"mn015"	::Oh. It it That's because	::	0
"me012"	::So, it's not just that it's adding that field. It's	::	0
"me010"	::Right.	::	0
"me012"	::O_K.	::	0
"me010"	::Absolutely. Good point.	::	0
"me010"	::It's it's the It's under what sub-type you're doing it. Yeah.	::	0
"mn015"	::Mm-hmm. Yeah.	::	0
"me003"	::It's mystery functions.	::	1
"me012"	::Well, they're defined somewhere, presumably.	::	1
"mn015"	::Well, sometimes it Sometimes,	::	0
"me010"	::Yeah, each is so that's funny. You bury the the state in the function	::	0
"mn015"	::When it	::	0
"me010"	::Alright. Uh	::	0
"mn015"	::it	::	0
"me003"	::Well, it just automatically initializes things that are common, right? So it's just a shorthand.	::	0
"me010"	::Yeah.	::	0
"mn015"	::For example Oh, this is German. Sorry.	::	0
"mn015"	::	::	0
"mn015"	::So, now, this, it cannot do anymore. Nothing comes out of here.	::	0
"me003"	::A "not a number" is a value. Awesome.	::	0
"mn015"	::So, it	::	0
"mn015"	::doesn't speak German anymore, but it does speak English. And there is, here,	::	0
"mn015"	::a reference	::	0
"mn015"	::So, this tells us that whatever is has the I_D " zero " is referenced here	::	0
"mn015"	::by the restriction seed and this is "I want	::	0
"mn015"	::What was the sentence?	::	0
"me010"	::"I want two seats here."	::	0
"mn015"	::"need two seats here." Nuh.	::	0
"mn015"	::"And where is it playing?" There should also be a reference to something, maybe.	::	0
"mn015"	::Our This is um	::	0
"mn015"	::Mmm.	::	0
"mn015"	::Here, we change and so, we Here we add something to the Discourse-Status, that the user wants to change something that was sort of done before	::	0
"mn015"	::And, uh	::	0
"mn015"	::and that, whatever is being changed has something to do with the cinema.	::	0
"me003"	::So then, whatever takes this M_-three-L_ is what actually changes the state, not the	::	0
"me003"	::Yeah, O_K.	::	0
"me010"	::No, right, the Discourse Maintainer, yeah.	::	0
"me003"	::Yeah.	::	0
"me010"	::I see. And it and it runs around looking for Discourse Status	::	0
"me010"	::tags,	::	0
"me010"	::and doing whatever it does with them.	::	0
"me010"	::And other people ignore those tags.	::	0
"me010"	::Alright.	::	0
"me010"	::So, yeah. I definitely think it's	::	1
"me010"	::It's worth	::	0
"me010"	::the exercise of trying to	::	1
"me010"	::actually add something	::	0
"me010"	::that isn't there.	::	1
"mn015"	::Hmm?	::	0
"me010"	::Uh	::	0
"mn015"	::Sort of get a complete understanding of the whole thing.	::	1
"me010"	::	::	0
"me010"	::Yeah, a kid understanding what's going on. Then the next thing we talked about is actually,	::	0
"me010"	::um, figuring out how to add our own	::	0
"me010"	::tags, and stuff like that.	::	0
"mn015"	::O_K.	::	0
"mn015"	::Point number two.	::	0
"mn015"	::I got the, uh, M_-three-L_ for the routes today.	::	1
"mn015"	::Uh, so I got some more.	::	0
"mn015"	::This is sort of the uh, um,	::	0
"mn015"	::Hmm. Interesting. It's just going up, it's not going	::	0
"mn015"	::back down.	::	0
"mn015"	::So, this is um, what I got today is the the new um M_-three-L_ for	::	0
"mn015"	::um, the Maps,	::	0
"me010"	::Yep.	::	0
"mn015"	::uh, and with some examples So, this is the X_M_L and this is sort of what it will look like later on,	::	0
"mn015"	::even though it you can't see it on on this resolution.	::	0
"mn015"	::And this is what it sort of is the the structure of Map requests,	::	0
"mn015"	::um	::	0
"mn015"	::also not very interesting,	::	0
"mn015"	::and here is the more interesting stuff for us, is the routes,	::	0
"mn015"	::route elements,	::	0
"mn015"	::and, again, as we thought it's really simple. This is sort of the, uh,	::	0
"mn015"	::um, parameters. We have	::	0
"mn015"	::	::	0
"mn015"	::simple " from objects" and " to objects" and so forth,	::	0
"mn015"	::points of interest along the way	::	0
"mn015"	::And, um,	::	0
"mn015"	::I asked them whether or not we could, um	::	0
"mn015"	::First of all, I was little bit	::	0
"mn015"	::It seemed to me that this way of doing it is sort of a a step backwards from the way we've done it before.	::	0
"mn015"	::It seems to me that some notions were missing.	::	0
"mn015"	::So these are these are	::	0
"me010"	::	::	0
"me010"	::So these are these are your friends back at E_M_L.	::	1
"mn015"	::Yep. Who are doing this.	::	0
"me010"	::So this is not a complicated negotiation.	::	0
"me010"	::There's there's not seven committees, or anything, right?	::	0
"mn015"	::No.	::	0
"mn015"	::No, this is very straightforward.	::	0
"me010"	::Great. So this is just trying to	::	0
"me010"	::It's a design thing, not a political thing.	::	0
"mn015"	::Yeah.	::	0
"me010"	::Once we've eh We can just sort of agree on what oughta be done.	::	0
"mn015"	::Exactly. And, um	::	0
"me010"	::Good.	::	0
"mn015"	::And, uh	::	0
"mn015"	::However, the, uh	::	0
"mn015"	::So that you understand, it is really simple. Uh You you have a route, and you cut it up in different pieces.	::	1
"mn015"	::And every	::	1
"mn015"	::every element of that of that	::	1
"mn015"	::Every segment we call a "route element".	::	1
"mn015"	::And so, from A_ to B_ we cut up in three different steps,	::	1
"mn015"	::and every step has a " from object" where you start, a " to object" where where you sort of end, and some points of interest along the way.	::	1
"mn015"	::What I was sort of missing here, and uh, maybe it was just me being too stupid, is, I didn't sort of get the the notion of the global goal	::	0
"mn015"	::of the whole route. Really, was not straightforward visibly for me.	::	0
"mn015"	::And some other stuff. And I	::	1
"mn015"	::suggested that they should be uh, kind enough to do two things for us, is one, um,	::	1
"mn015"	::Also allocating, uh, some tags for our Action Schema Enter-Vista-Approach,	::	1
"mn015"	::and	::	0
"mn015"	::And also,	::	0
"mn015"	::um, since you had suggested that	::	0
"mn015"	::that, um, we figure out if we ever, for a demo reason, wanted to shortcut directly to the G_I_S and the Planner,	::	0
"mn015"	::of how we can do it.	::	0
"mn015"	::Now, what's the state of the art of getting to entrances, um, what's the syntax for that, how getting to vista points and calculating those on the spot.	::	0
"mn015"	::And the Approach mode, anyhow, is the default.	::	1
"mn015"	::That's all they do it these days. Wherever you'll find a route planner it does nothing but get to the closest point where the street network is	::	1
"me010"	::Mm-hmm.	::	0
"mn015"	::at minimal distance to the geometric center.	::	1
"mn015"	::	::	0
"mn015"	::So.	::	0
"me010"	::So, well, let Now, this is important. Let, uh I want Again, outside of almost managerial point,	::	0
"me010"	::um	::	0
"me010"	::You're in the midst of this, so you know better. But it seems to me it's probably	::	0
"me010"	::a good idea to	::	0
"me010"	::uh minimize the number of	::	0
"me010"	::uh, change requests we make of them.	::	0
"me010"	::So it seemed to me, what we ought to do is get our story together.	::	1
"me010"	::O_K? And think about it some, internally, before	::	1
"me010"	::asking them to make changes.	::	1
"mn015"	::Mm-hmm.	::	0
"me010"	::Oh. Does this does this make sense to you guys? It I mean you're you're doing the the interaction but it seemed to me that	::	0
"me010"	::what we ought to do is come up with a	::	0
"me010"	::uh, something where you, um	::	0
"me010"	::And I I don't know who's working most closely on it. Probably Johno.	::	0
"me010"	::O_K.	::	0
"me010"	::Uh, take what they have,	::	0
"me010"	::send it to everybody saying "this is what they have, this is what we think we should add",	::	0
"me010"	::O_K? and then have a a an iteration within our group saying "Hmm, well	::	0
"me010"	::O_K? And get our best idea of what we should add.	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::And then go back to them.	::	0
"me010"	::Is or, I don't know does this make sense to you? Or	::	0
"mn015"	::Yeah. Especially if we want	::	0
"mn015"	::Sort of, what I my feeling was we we sort of reserved something that has a	::	0
"mn015"	::an O_K label. That's that was my first sort of step.	::	0
"me010"	::Mm-hmm.	::	0
"mn015"	::	::	0
"mn015"	::No matter how we want to call it,	::	0
"mn015"	::this is sort of our playground. And if we get something in there that is a structure elaborate and and and and and complex enough to to to maybe enable a whole simulation,	::	0
"me010"	::Right.	::	0
"me010"	::Right.	::	0
"mn015"	::one of these days,	::	0
"mn015"	::that would be the the perfect goal.	::	0
"me010"	::That's right. So. So, Yeah. The problem isn't the short range optimization.	::	1
"me010"	::It's the sort of one or two year kind of thing. O_K. What are the class of things we think we might try to do in a year or two?	::	1
"me010"	::How how would we try to characterize those and what do we want to request now	::	1
"me010"	::that's leave enough space to do all that stuff?	::	1
"mn015"	::Mm-hmm. Yep.	::	0
"me010"	::Right. And that that requires some thought.	::	0
"mn015"	::Yep.	::	0
"me010"	::And so that sounds like a great thing to do	::	0
"me010"	::as the priority item	::	0
"me010"	::um, as soon as we can do it.	::	0
"mn015"	::Yep.	::	0
"me010"	::So so you guys will send to the rest of us	::	0
"me010"	::um	::	0
"me010"	::a version of	::	0
"me010"	::um, this,	::	0
"me010"	::and the uh, description	::	0
"me003"	::With yeah, suggested improvements and	::	0
"me010"	::Well Yeah. So, the the uh Not everyone	::	0
"me010"	::uh, reads German, so if you'd	::	0
"me010"	::um	::	0
"me003"	::Mmm.	::	0
"me010"	::uh, change the description to, uh,	::	0
"me010"	::English	::	0
"me003"	::O_K.	::	0
"me010"	::and, um,	::	0
"me010"	::Then then, yeah. Then, with some suggestions about where where do we go from here?	::	0
"me010"	::Uh, this and this, of course, was just the	::	1
"me003"	::O_K.	::	0
"me010"	::action end. Uh, at some point we're going to have to worry about the language end. But for the moment just	::	1
"me010"	::uh, for this class of of things, we might want to try to encompass.	::	0
"me010"	::And	::	0
"me003"	::Then the scope of this is beyond	::	0
"me003"	::Approach and or Vista. Yeah, yeah.	::	0
"me010"	::Oh, yeah, yeah yeah yeah. This is this is everything that that,	::	1
"me010"	::um,	::	1
"me010"	::you know, um	::	0
"me003"	::Yeah, yeah.	::	0
"me010"	::we might want to do in the next couple years.	::	1
"mn015"	::Hmm?	::	0
"me003"	::So what would O_K.	::	0
"me010"	::We don't I mean, that's an issue. We don't know what, entirely.	::	0
"me003"	::Uh, yeah. but I'm just	::	0
"me003"	::But the Yeah, O_K. So I just	::	0
"me003"	::this	::	0
"me003"	::X_M_L stuff here just has to do with Source-Path-Goal type stuff,	::	0
"me003"	::in terms of	::	0
"me003"	::traveling through Heidelberg.	::	0
"mn015"	::Hmm.	::	0
"me010"	::Right.	::	0
"me003"	::Or travel, specifically.	::	0
"me003"	::So, but this Is the domain greater than that?	::	0
"me010"	::No. I think I think the the idea is	::	0
"me003"	::O_K.	::	0
"me010"	::that	::	0
"me010"	::Oh. It's beyond Source-Path-Goal, but I think we don't need to get beyond it	::	1
"me010"	::tourists in Heidelberg. It seems to me we can get	::	1
"me003"	::O_K.	::	0
"me010"	::all the complexity we want in actions and in language	::	1
"me010"	::without going outside of tourists in Heidelberg.	::	1
"me010"	::O_K?	::	0
"me010"	::But you know, depending on what people are interested in,	::	0
"me010"	::one could have, uh, tours, one could have	::	0
"me010"	::um, explanations of why something is is, you know, why why was this done, or I mean, no there's no end	::	0
"me010"	::to the complexity you can build into the	::	0
"me010"	::uh, what a tourist in Heidelberg might	::	0
"me003"	::Mmm.	::	0
"me010"	::ask.	::	0
"me010"	::So, at least unless somebody else wants to suggest otherwise I think	::	1
"me010"	::the general domain	::	1
"me010"	::we don't have to	::	0
"me010"	::uh, broaden.	::	1
"me010"	::That is, tourists in Heidelberg.	::	1
"me010"	::And if there's something somebody comes up with that can't be done that way, then, sure. we'll we'll look at that, but	::	0
"me010"	::uh	::	0
"me010"	::I'd be I'd be surprised at	::	0
"me010"	::if there's any	::	0
"me010"	::important issue that that	::	0
"me010"	::And, um	::	0
"me010"	::I mean if if you want to	::	0
"me010"	::uh, push us into reference problems, that would be great.	::	0
"mn036"	::O_K.	::	0
"me010"	::O_K, so this is his specialty is reference,	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::and you know, what what are these things referring to? Not only	::	0
"me010"	::anaphora, but, uh, more generally the,	::	0
"me010"	::uh	::	0
"me010"	::this whole issue of,	::	0
"me010"	::uh, referring expressions, and, what is it that they're actually	::	0
"me010"	::dealing with in the world?	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::And, again, this is in the this is also pretty well formed because there is an ontology,	::	1
"me010"	::and the database, and stuff. So it isn't like,	::	1
"me010"	::um, you know, the Evening Star or stuff like that. it	::	1
"mn036"	::Right.	::	0
"me010"	::All the entities	::	1
"me010"	::do have concrete reference. Although the To get at them from a language may not be trivial.	::	1
"mn036"	::Right.	::	0
"mn036"	::Right.	::	0
"me010"	::There aren't	::	0
"me010"	::really deep mysteries about	::	0
"me010"	::um, what what things the system knows about.	::	0
"mn036"	::Right. And you have both proper names and descriptions and and you can ask for it.	::	0
"me010"	::All those things. Yeah. You have proper names, and descriptions.	::	0
"mn015"	::Mm-hmm.	::	0
"mn036"	::Right. O_K.	::	0
"mn015"	::Nuh.	::	0
"me010"	::And a and a lot and and anaphora, and pronouns, and	::	0
"mn036"	::Right.	::	0
"mn036"	::Right.	::	0
"me010"	::all those things.	::	0
"mn015"	::Now, we the the whole Unfortunately, the whole database is, uh, in German.	::	1
"mn015"	::We have just commissioned someone to translate some bits of it, I_E the	::	1
"mn015"	::the shortest the the more general descriptions of all the objects and, um, persons and events. So, it's a relational database with persons, events,	::	1
"mn015"	::and, um, objects.	::	1
"mn015"	::And it's it's quite, um,	::	0
"mn015"	::there. But did I uh I think there will be great because the reference problem really is not trivial, even if you have such a	::	0
"mn015"	::well-defined world.	::	0
"me010"	::He knows.	::	0
"mn015"	::you are not, uh, throwing uh, uh, carrying owls to Athens.	::	0
"me003"	::Could you give me an example of a reference problem? so so I can make it more concrete?	::	0
"mn015"	::Well	::	0
"mn015"	::How do I get to the Powder-Tower?	::	0
"mn015"	::We sort of think that our bit in this problem is interesting, but, just to get from Powder-Tower to an object I_D in a database	::	0
"mn015"	::is also not really trivial.	::	0
"mn036"	::Or or if you take something even more scary, um, "how do I get to the third building after the Tower? the Powder-Tower?" Uh, you need some mechanism for	::	0
"me003"	::Mmm.	::	0
"me010"	::Yeah.	::	0
"me010"	::Or, you know, the church across from City Hall, or	::	0
"me003"	::Or the the restaurant where they wear lederhosen? Or is that	::	0
"mn015"	::Or	::	0
"mn036"	::Right.	::	0
"me010"	::Yeah, that would be fine.	::	0
"fe004"	::Uniquely.	::	0
"mn036"	::Right.	::	0
"me003"	::O_K.	::	0
"me010"	::Yeah.	::	0
"mn015"	::or or tower, or this tower, or that building, or	::	0
"mn036"	::Right.	::	0
"mn015"	::hmm?	::	0
"me003"	::O_K.	::	0
"me010"	::Or you can say "how you know, "how do I get back? "	::	0
"me003"	::Trying to	::	0
"me003"	::Yeah, yeah.	::	0
"me010"	::O_K.	::	0
"me010"	::And, again, it's just a question of which of these things,	::	0
"me010"	::uh, people want to	::	0
"me010"	::dive into. What,	::	0
"me010"	::uh, I think I'm gonna try to do,	::	0
"me010"	::and I guess, pwww!	::	0
"me010"	::let's say that by the end of spring break,	::	1
"me010"	::I'll try to come up with some	::	0
"me010"	::general story about,	::	1
"me010"	::um, construction grammar, and what constructions we'd use and how all this might	::	1
"me010"	::fit together. There's this whole framework problem that I'm feeling really uncomfortable about.	::	1
"me010"	::And I haven't had a chance to	::	0
"me010"	::think about it seriously. But I I want to	::	0
"me010"	::I want to do that early, rather than late.	::	0
"me010"	::And you and I will probably have to talk about this some.	::	0
"mn015"	::	::	0
"mn015"	::That's what strikes me, that we sort of	::	0
"mn015"	::the uh, small	::	0
"mn015"	::Something, uh, maybe we should address one of these days, is to That most of the work people actually always do is look at some statements,	::	0
"mn015"	::and and analyze those. Whether it's abstracts or newspapers and stuff like this.	::	0
"me010"	::Hmm.	::	0
"mn015"	::But the whole is it is it really relevant that we are dealing mostly with, sort of, questions?	::	0
"me010"	::Oh, yeah? Well, I mean yeah,	::	0
"mn015"	::Uh, you know	::	0
"mn015"	::And this is It seems to me that we should maybe at least spend a session or or brainstorm a little bit about whether that	::	0
"mn015"	::this is special case in that sense.	::	0
"me012"	::Mm-hmm.	::	0
"mn015"	::Um,	::	0
"mn015"	::I don't know.	::	0
"mn015"	::You know Did we ever find metaphorical use in in questions in in that sense, really?	::	0
"me010"	::Yeah.	::	0
"me012"	::	::	0
"me010"	::You will.	::	0
"mn015"	::And how soon, I don't know.	::	0
"me010"	::Oh, yeah.	::	0
"me010"	::I mean, uh, we could take	::	0
"me010"	::all the standard metaphor examples and make question	::	0
"me010"	::versions of them.	::	0
"me010"	::O_K.	::	0
"mn036"	::	::	0
"mn015"	::" Who got kicked out of France?" Nuh.	::	0
"me010"	::Yeah, or, you know. why is he why is he pushing for promotion?" or, "who's pushing proof-" er, just pick pick any of them and just	::	0
"mn036"	::Right.	::	0
"mn015"	::Nuh.	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::do the eh	::	0
"me010"	::So I don't I don't think,	::	0
"me010"	::uh, it's at all	::	0
"me010"	::difficult	::	0
"me010"	::Uh, to convert them to question forms that really exist and people say all the time,	::	0
"me010"	::um	::	0
"me010"	::And sort of we don't know how to handle them, too. Right? I mean, it's	::	0
"me010"	::I	::	0
"me010"	::It	::	0
"me010"	::We don't know how to handle the declarative forms,	::	0
"me010"	::	::	0
"me010"	::really,	::	0
"me010"	::and, then, the interrogative forms, ah-oh.	::	0
"me010"	::Uh.	::	0
"me012"	::Ooo!	::	0
"me010"	::Yeah. Nancy, it looked like you were	::	0
"fe004"	::Oh. it's just that that the goals	::	0
"fe004"	::are very different to cases So we had this problem last year when we first thought about this domain, actually, was that	::	0
"fe004"	::most of the things we talked about are our story understanding. Uh, we're gonna have a short discourse and the person talking is trying to,	::	0
"me010"	::Right.	::	0
"fe004"	::I don't know, give you a statement and tell you something. And here, it's	::	0
"mn015"	::Help you create a mental model, blah-blah-blah. Yeah.	::	0
"fe004"	::eh Yeah, I guess so. And then here, you are uh, the person is getting information and they or may not be following some larger plan,	::	0
"me010"	::Yes.	::	0
"fe004"	::you know, that we have to recognize or, you know, infer.	::	0
"fe004"	::And the their discourse patterns probably	::	0
"fe004"	::don't follow quite as many	::	0
"fe004"	::logical Yeah.	::	0
"me010"	::Right. No, I think that's one of things that's interesting, is is in this sort of	::	1
"me010"	::arching story we we worked it out for as you say, this the storytelling scenario.	::	1
"fe004"	::Mm-hmm.	::	0
"fe004"	::Mm-hmm.	::	0
"me010"	::And I think it's really worth thinking through	::	1
"me010"	::what it looks like. What is the simspec mean, et cetera.	::	1
"fe004"	::Mm-hmm.	::	0
"fe004"	::Right. Cuz for a while we were thinking, "well, how can we change the, um, data to sort of illicit illicit, um, actions that are more like what we are used to?"	::	0
"fe004"	::But obviously we would rather, you know, try to figure out what's what's, you know	::	0
"me010"	::Well, I don't know. I mean, maybe maybe that's what we'll do is is	::	0
"me010"	::We can do anything we want with it. I mean, once we have fulfilled these requirements,	::	1
"fe004"	::Yep. Mmm Mm-hmm.	::	0
"fe004"	::Mm-hmm.	::	0
"me010"	::O_K, and the one for next	::	0
"me010"	::uh, summer is just	::	0
"me010"	::half done and then the other half is this,	::	0
"fe004"	::Mm-hmm.	::	0
"me010"	::um,	::	0
"me010"	::"generation thing" which we think isn't much different.	::	0
"me010"	::So once that's done,	::	0
"me010"	::then all the rest of it is,	::	0
"me010"	::uh, sort of,	::	0
"me010"	::you know, what we want to do for the research.	::	0
"me010"	::And we can we can do all sorts of things that don't fit into their	::	1
"me010"	::framework at all.	::	1
"me010"	::there's no reason why we're we're constrained to do that.	::	0
"fe004"	::Mm-hmm.	::	0
"me010"	::If we can use all the, uh,	::	0
"me010"	::execution engines,	::	0
"me010"	::then we can,	::	0
"me010"	::you know, really	::	0
"me010"	::try things that	::	0
"fe004"	::Mm-hmm.	::	0
"me010"	::would be too too much pain to do ourselves. But there's no obligation on any of this.	::	0
"me010"	::So, if we want to turn it into standing stories about Heidelberg,	::	1
"me010"	::we can do that.	::	1
"me010"	::I mean, that would just be a um	::	0
"mn015"	::Or, as a matter of fact, we need	::	0
"mn015"	::and if we if eh take a ten year perspective, we need to do that, because	::	0
"mn015"	::	::	0
"mn015"	::Assuming we have this, um, in that case we actually do have these wonderful stories, and historical anecdotes, and	::	0
"me010"	::Yeah.	::	0
"fe004"	::Mmm.	::	0
"mn015"	::knights jumping out of windows, and-and-and	::	0
"mn015"	::tons of stuff. So, the database is huge,	::	0
"mn015"	::and if we want to answer a question on that,	::	0
"mn015"	::we actually have to go one step before that, and understand that.	::	0
"fe004"	::Mm-hmm.	::	0
"mn015"	::In order to do sensible information extraction. And so,	::	0
"fe004"	::Yeah.	::	0
"fe004"	::Mm-hmm.	::	0
"me010"	::You might, yeah.	::	0
"mn036"	::Mm-hmm.	::	0
"mn015"	::um, this has been a a a Deep Map research issue that was is is part of the unresolved, and to-do's, and something for the future, is	::	0
"mn015"	::how can we sort of	::	0
"mn015"	::run our our text, our content, through a machine that will enable us, later, to	::	0
"fe004"	::Mm-hmm.	::	0
"mn015"	::retrieve or answer questions more sensibly?	::	0
"fe004"	::Mmm.	::	0
"me010"	::Right.	::	0
"me010"	::Anyway.	::	0
"mn036"	::So, uh So, uh, I was just going to ask, um, so,	::	0
"me010"	::Who's going?	::	0
"mn036"	::what is the the basic thing that that you are, um, obligated to do, um, uh, by the summer before uh we can move	::	1
"me010"	::Ah!	::	0
"me010"	::O_K. So eh Yeah. So, what happened is,	::	0
"me010"	::there's this, eh, uh Robert was describing	::	0
"me010"	::the There's two packages there's a,	::	1
"me010"	::uh, quote parser, there's a particular piece	::	1
"me010"	::of this big system, which, in German,	::	1
"me010"	::uh, takes these sentence templates and produces X_M_L structures.	::	1
"mn036"	::Right.	::	0
"me010"	::And one of our jobs was to make the English equivalent of that.	::	1
"mn036"	::Right.	::	0
"me010"	::That, these guys did in a in a day.	::	1
"mn036"	::Right.	::	0
"me010"	::The other thing is, at the other end, roughly at the same level,	::	1
"me010"	::there's something that takes,	::	1
"me010"	::uh, X_M_ L structures,	::	0
"me010"	::produces an output X_M_L structure which is	::	1
"me010"	::instructions for the generator.	::	1
"mn036"	::Right.	::	0
"me010"	::O_K? And then there's a language generator, and then after that a a synthesizer that	::	1
"me010"	::goes from an X_M_L structure to,	::	1
"me010"	::uh, language generation, to	::	0
"me010"	::actual specifications for a synthesizer.	::	1
"mn036"	::Right.	::	0
"me010"	::Eh, but again, there's one module in which there's one	::	0
"me010"	::piece	::	1
"me010"	::that we have to convert to English.	::	1
"mn036"	::Right.	::	0
"mn036"	::Got it.	::	0
"me010"	::Is that	::	0
"me010"	::O_K. And that But as I say, this is	::	0
"me010"	::all along was viewed as a kind of	::	0
"me010"	::a a minor thing,	::	0
"me010"	::necessary, but but not	::	0
"mn036"	::Right. Right. That's great!	::	0
"me010"	::O_K?	::	0
"me010"	::And much more interesting is the fact that,	::	0
"me010"	::as part of doing this, we we are,	::	0
"me010"	::you know, inheriting this system that does all of these other	::	0
"mn036"	::Right.	::	0
"me010"	::things.	::	0
"me010"	::Not precisely what we want, and that's	::	0
"me010"	::that's where it	::	0
"me010"	::it gets difficult. And I I don't pretend to understand yet what I think	::	0
"me010"	::we really ought to do.	::	0
"mn015"	::O_K.	::	0
"mn015"	::So, enough of that,	::	0
"mn015"	::but I, uh, um,	::	0
"mn015"	::mmm,	::	0
"mn015"	::the sort of, Johno and I will take up that	::	0
"mn015"	::responsibility,	::	0
"mn015"	::and, um, get a first draft of that.	::	0
"mn015"	::Now, we have um just, I think two more short things.	::	0
"me010"	::O_K.	::	0
"mn015"	::Um,	::	0
"mn015"	::you guys sort of started fighting, uh, on the Bayes-net	::	0
"mn015"	::"Noisy-OR" front?	::	0
"me012"	::Hmm.	::	0
"me012"	::Yeah, I thought I should, um,	::	0
"me012"	::talk a little bit about that, because that might be a good, uh,	::	0
"me012"	::sort of architecture to have, in general for, uh, problems with,	::	0
"me010"	::Good!	::	0
"me010"	::O_K.	::	0
"me012"	::you know, multiple inputs to a node.	::	0
"me010"	::Good.	::	0
"me010"	::And what's the other one? so that just we know what the agenda is?	::	0
"mn015"	::Um, the Wu paper, I think maybe	::	0
"me010"	::Oh, yeah. I've got a couple new Wu papers as well. Uh, so I I've been in contact with Wu, so, probably let's	::	0
"me010"	::put that off till I I till I understand better,	::	0
"me010"	::uh, what he's doing. It's just a little embarrassing cause all this was in his thesis and I was on his thesis committee,	::	0
"me010"	::and, so, I really knew this at one time.	::	0
"mn036"	::Ugh.	::	0
"me010"	::But, I I	::	0
"me010"	::It's not only uh Is Part of what I haven't figured out yet is is how all this goes together.	::	0
"me010"	::So I'll dig up some more	::	0
"me010"	::stuff from Dekai.	::	0
"me010"	::And so why don't we just do the, uh	::	0
"me012"	::O_K. So should I Is there a white board here that I can use?	::	0
"me010"	::Yeah. You could	::	0
"me012"	::Uh	::	0
"fe004"	::Yeah.	::	0
"me012"	::Or shall I just use this?	::	0
"me010"	::squealing sound?	::	0
"me010"	::It's probably just as easy.	::	0
"mn036"	::Yeah.	::	0
"me012"	::Yeah.	::	0
"me003"	::You can put the microphone in your pocket.	::	0
"me012"	::Hey!	::	0
"me003"	::I was envying you and your pocket cause I don't have one.	::	0
"fe004"	::It was a quick one, huh?	::	0
"me010"	::That's why they invented "pocket T_'s".	::	0
"fe004"	::They have clips! Huh.	::	0
"me003"	::exactly	::	0
"me012"	::Yeah. So, um Recall that, uh,	::	1
"me012"	::we want to have	::	0
"me012"	::this kind of structure in our Bayes-nets.	::	1
"me012"	::Namely, that, um You have these nodes that have several bands, right? So	::	0
"me012"	::Does I mean, they sort of	::	0
"me012"	::the typical example is that, um, these are all a bunch of cues for something, and this is a certain effect that we'd like to conclude.	::	1
"me012"	::So, uh	::	0
"me012"	::Like, let's just look at the case when, um, this is actually the the final action, right? So this is like, uh,	::	0
"me012"	::you know,	::	0
"mn015"	::	::	0
"me012"	::touch, or Sorry. Uh	::	0
"mn015"	::EVA	::	0
"mn015"	::	::	0
"me012"	::Yeah, E_V_A, right?	::	0
"mn015"	::Yeah.	::	0
"me012"	::Enter, View, Approach, right?	::	1
"mn036"	::what was this? It ehhh, ehhh.	::	0
"me012"	::So, this is	::	0
"me010"	::write it out for	::	0
"me012"	::Yeah. Enter,	::	0
"mn036"	::I mean	::	0
"me012"	::View,	::	0
"me012"	::Approach.	::	0
"mn036"	::O_K. Right.	::	0
"me012"	::Right.	::	0
"me012"	::So, I mean, we'd like to take all these various cues, right? So this one might be, say, uh	::	0
"mn036"	::Like the army. Yeah.	::	0
"fe004"	::New terminology? I haven't heard that before.	::	0
"me012"	::Well, let me pick a random one and say, uh	::	0
"mn015"	::Hmm?	::	0
"me012"	::I don't know, it could be, like	::	0
"me012"	::This isn't the way it really is, but let me say that, suppose someone mentioned, uh,	::	0
"me012"	::admission fees	::	0
"me012"	::Ah, it takes too long. Try let me just say "Landmark".	::	0
"me012"	::If the thing is a landmark,	::	0
"me012"	::you know, um then there's another thing that says if	::	0
"me012"	::um	::	0
"me012"	::if it's closed or not, at the moment.	::	0
"me012"	::Alright, so you have nodes. Right? And the, uh, problem that we were having was that, you know, given N_nodes, there's "two to the N"	::	0
"me012"	::Given N_nodes, and furthermore, the fact that there's three things here, we need to specify "three times", uh, "two to the N" probabilities.	::	1
"me012"	::Right? That's assuming these are all binary, which they may not be. For example, they could be "time of day", in which case we could, uh, say, you know, "Morning,	::	0
"me012"	::afternoon, evening, night". So, this could be more	::	0
"me012"	::So, it's a lot, anyway.	::	0
"me012"	::And, that's a lot of probabilities to put here, which is kind of a pain. So	::	1
"me012"	::Noisy-ORs are a way to, uh,	::	1
"me012"	::sort of deal with this.	::	1
"me012"	::Um	::	0
"me012"	::Where should I put this?	::	0
"me012"	::So, the idea is that, um,	::	0
"me012"	::Let's call these, uh, C_one, C_two, C_three, and C_four, and E_, for Cause and Effect, I guess.	::	0
"me012"	::The idea is to have these intermediate nodes.	::	0
"me012"	::Right.	::	0
"me012"	::Well, actually, the idea, first of all, is that each of these things has a quote-unquote distinguished state, which means that this is	::	0
"me012"	::the state in which we don't really know anything about it. So right?	::	0
"me012"	::So, for example, if we don't really know if the thing is a landmark or not,	::	1
"me012"	::Or, if that just doesn't seem relevant, then that would be sort of the the Distinguish state. It's a really, you know,	::	1
"me012"	::if there is something for the person talking about the admission fee,	::	0
"me012"	::you know, if they didn't talk about it, that would be the Distinguish state.	::	0
"mn015"	::so, this is a fanciful way of saying "default"?	::	0
"me012"	::So	::	0
"me012"	::Yeah, yeah. That's just what they the word they used in that paper.	::	0
"mn015"	::O_K.	::	0
"mn015"	::Mm-hmm.	::	0
"me012"	::So, the idea is that, um, you have these intermediate nodes, right? E_one, E_two, E_three and E_four?	::	0
"me010"	::So, this is the Heckerman paper you're working with? Good.	::	1
"me012"	::Yeah.	::	1
"me012"	::So	::	1
"me012"	::The idea is that, each of these E_I	::	0
"me012"	::is	::	1
"me012"	::represents what this would be	::	0
"me012"	::if all the other ones were in the distinguish state. Right?	::	1
"me012"	::So, for example, suppose that the person I mean, suppose the thing that they talked about is a landmark.	::	0
"me012"	::But none of the other sort of cues really apply.	::	0
"me012"	::Then, this would be	::	0
"me012"	::The this would just represent the probability distribution of this,	::	0
"me012"	::assuming that this cue is turned on and the other ones just didn't apply?	::	0
"me012"	::So, you know, if it is a landmark, and none of the other things really applicable, then this would represent the probability distribution. So maybe in this case	::	1
"me012"	::Maybe we just Maybe we decide that, if the thing's a landmark and we don't know anything else, then we're gonna conclude that, um	::	0
"me012"	::They want to view it with probability, you know, point four. They want to enter it with probability, uh	::	0
"me012"	::with probability point five and they want to approach it probability point one, say	::	0
"me012"	::Right? So we come up with these little tables for each of those	::	1
"me012"	::O_K.	::	0
"me012"	::And the final thing is that, um	::	1
"me012"	::this is a deterministic function of these,	::	1
"me012"	::so we don't need to specify any probabilities.	::	0
"me012"	::We just have to, um, say what function this is, right?	::	0
"me012"	::So we can let this be, um	::	0
"me012"	::G_ of E_one comma E_two.	::	0
"me012"	::E_three, E_four.	::	0
"me012"	::Right?	::	0
"me012"	::and our example G_ would be, um,	::	0
"me012"	::a majority vote?	::	0
"me012"	::Right?	::	0
"me010"	::Well. O_K, so so the important point	::	0
"me010"	::is	::	0
"me010"	::not what the G_ function is.	::	0
"me010"	::The important point is	::	1
"me010"	::that	::	0
"me010"	::Um	::	0
"me010"	::There is a a a general kind of idea of shortcutting the full C_P_T. the full conditional probability table with some function.	::	1
"me010"	::O_K? Which you choose appropriately for each case. So, depending on what your situation is, there are different functions which are most appropriate.	::	0
"me010"	::And	::	0
"me010"	::So I gave eh Bhaskara a copy of this, eh sort of "ninety-two" paper. and you got one, Robert. I don't know who else has seen it.	::	0
"me012"	::Mm-hmm.	::	0
"me012"	::There's I mean yeah. it's Heckerman and Breese.	::	0
"me010"	::It's short.	::	0
"me010"	::It's short.	::	0
"me012"	::Yeah.	::	0
"me010"	::So, Um, uh you Have you read it yet?	::	0
"me012"	::Uh, you can Yeah, you should take a look at it, I guess.	::	0
"me010"	::O_K, so you should take a look. Nancy, I'm sure you read it at some point in life.	::	0
"me003"	::O_K	::	0
"fe004"	::I yeah. I I think so, yeah.	::	0
"me010"	::O_K.	::	0
"fe004"	::Yeah,.	::	0
"me010"	::And so, you other guys can decide how interested Anyway. So the paper isn't isn't real hard. And	::	0
"mn036"	::O_K.	::	0
"me010"	::Uh	::	0
"me010"	::One of the questions just come at Bhaskara is,	::	0
"me010"	::"How much of this does JavaBayes support?"	::	0
"me012"	::Yeah, it's a good question. Um	::	1
"me012"	::The so what we want, is basically JavaBayes to support deterministic, uh, functions.	::	1
"me010"	::Right.	::	0
"me012"	::And, um In a sense it we can make it supported by, um, manually, uh, entering, you know, probabilities that are one and zeros, right?	::	0
"me010"	::Right. So the little handout that The little thing that I sent I sent a message saying,	::	0
"me010"	::uh, here is a way to take	::	0
"me010"	::One thing you could do, which is kind of in a way, stupid, is take this deterministic function,	::	0
"me010"	::and use it to build the C_P_T.	::	0
"me010"	::So, if JavaBayes won't do it for you,	::	1
"mn015"	::Mmm.	::	0
"me010"	::that you can convert all that into what the C_P_T would be.	::	0
"me010"	::Um and, what I sent out about a week ago, was an idea of how to do that,	::	0
"me010"	::for,	::	0
"me010"	::um, evidence combination. So one of one function that you could use as your "G_ function" is an Evidence-Combining. So you just take the	::	0
"me010"	::uh, if each of if each of the ones has its own	::	0
"me010"	::little table like that, then you could take the,	::	0
"me010"	::uh, strength of each of those, times its little table, and you'd add up the total evidence for "V_", "E_", and "A_".	::	0
"me012"	::Mmm.	::	0
"me012"	::I don't think you can do this, because	::	0
"fe004"	::Mm-hmm.	::	0
"me010"	::Yep.	::	0
"me012"	::G_ is a function from	::	0
"me012"	::that	::	0
"me012"	::to that.	::	0
"me010"	::Right.	::	0
"me012"	::Right? So there's no numbers. There's just	::	0
"me012"	::quadruplets of well, N_duplets of, uh, E_Vs.	::	0
"me010"	::	::	0
"me010"	::No, no But I'm saying is There	::	0
"me010"	::There is a I mean, if if if you decide what's what is appropriate, is probablistic evidence combination, you can write a function	::	0
"me010"	::that does it. It's a it's actually one of the examples he's got in there.	::	0
"me010"	::But, anyway, skipping skipping the question of exactly which functions	::	0
"me010"	::now is it clear	::	0
"me010"	::that you might like to be able to	::	0
"me010"	::shortcut	::	0
"me010"	::the whole conditional probability table.	::	0
"mn015"	::I mean, in some it seems very plausible in some sense, where we will be likely to not be observe some of the stuff.	::	0
"mn015"	::Cuz we don't have the access to the information.	::	0
"me012"	::Oops, sorry.	::	0
"me010"	::Right. That's one of the problems, is, Is is, Where would Where would it all come from?	::	0
"mn015"	::Yeah.	::	0
"mn015"	::So.	::	0
"me012"	::Is Oh, right. would not be able to observe	::	0
"fe004"	::Mmm.	::	0
"me012"	::What?	::	0
"mn015"	::if it's a a a Discourse Initial Phrase, we will have nothing in the discourse history.	::	0
"mn015"	::So, if if we ever want to wonder what was	::	0
"me012"	::Oh	::	0
"me012"	::Oh. are you saying that we'll not be able to observe certain nodes? That's fine. That is sort of orthogonal thing.	::	0
"me010"	::Yeah, so there's there's two separate things, Robert.	::	0
"me010"	::The the the the Bayes-nets in general are quite good	::	1
"me010"	::at saying, "if you have no current information about this variable just take the prior for that."	::	1
"me010"	::O_K? that's what they're real good at.	::	0
"me010"	::So, if you don't have any information about the discourse,	::	1
"me010"	::you just use your priors of of whatever	::	1
"me010"	::the discourse	::	1
"me010"	::uh,	::	0
"me010"	::eh, basically whatever it's Probabilistically, whatever it would be. And it's it's sort of not a great estimate, but	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::it's the best one you have,	::	0
"me010"	::and, so forth. So that, they're good at. But the other problem is, how do you fill in all these numbers?	::	0
"fe004"	::Mm-hmm. Yeah.	::	0
"me010"	::And I think that's the one he was getting at.	::	0
"me012"	::Yeah. So, specifically in this case you have to	::	0
"me012"	::have this many numbers, whereas in this case you just have to have three for this, three for this, three for this. Right? So you have to have just	::	0
"mn015"	::Mm-hmm.	::	0
"me012"	::three N_?	::	0
"me012"	::So, this is much smaller than that.	::	0
"me003"	::Asymptotically.	::	0
"fe004"	::Mm-hmm.	::	0
"me012"	::Yeah. Right.	::	0
"me010"	::Well, pretty quickly.	::	0
"me003"	::yeah, yeah.	::	0
"fe004"	::So, you don't need data enough to cover uh, nearly as much stuff.	::	0
"me010"	::I mean	::	0
"me012"	::I don't know.	::	0
"me003"	::So, really, What a A Noisy-OR seems to kind of	::	0
"me003"	::"neural-net-acize" these Bayes-nets?	::	0
"me010"	::Eh No, no. So, "Noisy-OR" is a funny	::	0
"me010"	::way of referring to this, because	::	0
"me010"	::the Noisy-OR is only one instance.	::	0
"me012"	::Yeah. This isn't a Noisy-OR anymore.	::	0
"me010"	::That one actually isn't a Noisy-OR. So we'll have to think of	::	0
"me003"	::Yeah.	::	0
"me010"	::of a way	::	0
"me012"	::it's a Noisy-arg-max or a Noisy-whatever.	::	0
"me010"	::Yeah, whatever. Yeah. So	::	0
"me010"	::Eh	::	0
"me010"	::Um	::	0
"me003"	::Well, my point was more that we just eh With the neural net, right, eh, things come in, you have a function that combines them and	::	0
"me010"	::Yeah, it it that's true. It is is also more neural-net-like, although	::	0
"me010"	::Uh, it isn't necessarily sum	::	0
"me010"	::uh, you know, sum of weights or anything like that.	::	0
"me003"	::Right.	::	0
"me010"	::I mean You could have,	::	0
"me010"	::uh, like the Noisy-OR function,	::	1
"me010"	::really is one that's essentially says, uh, take the max.	::	1
"me012"	::Well, the "OR".	::	0
"me010"	::Same.	::	0
"me012"	::Right. I guess you're right. Yeah.	::	0
"me010"	::Uh	::	0
"me010"	::But anyway. So	::	0
"me010"	::And, I I think that's the standard way people	::	1
"me010"	::get around the	::	1
"me010"	::uh	::	1
"me010"	::There are a couple other ones. There are ways of breaking this up into to to subnets and stuff like that. But, um	::	1
"me010"	::The	::	0
"me010"	::I think we definitely I think it's a great idea to to pursue that.	::	1
"me012"	::Yep. So	::	0
"mn015"	::still sort of leaves one question.	::	0
"mn015"	::It I mean you you can always uh see easily that that I'm not grasping everything correctly, but what seemed attractive to me in uh in the last discussion we had, was	::	0
"mn015"	::that we find out a means of	::	0
"mn015"	::of getting these point four, point five, point one,	::	0
"mn015"	::of C_four,	::	0
"mn015"	::not because, you know, A_ is a Landmark or not, but we we we label this whatever object type,	::	0
"mn015"	::and if it's a garden,	::	0
"mn015"	::it's point three, point four, point two. If it's a castle, it's point eight, point one, point one. If it's, uh, a town hall, it's point two, point three, point five.	::	0
"me010"	::Right.	::	0
"mn015"	::And so forth.	::	0
"mn015"	::And we don't want to write this down	::	0
"mn015"	::necessarily every time for something but, uh	::	0
"me012"	::It'll be students Where else would it be stored? That's the question.	::	0
"mn015"	::let's see.	::	0
"mn015"	::Well, in the beginning, we'll write up a flat file. We know we have twenty object types and we'll write it down in a flat file.	::	0
"me010"	::Oh.	::	0
"me010"	::Yeah.	::	0
"me010"	::No. So,	::	0
"me010"	::Well, let me say something, guys, cuz there's not There's a pretty point about this we might as well get in right now.	::	1
"me012"	::Mm-hmm.	::	0
"me010"	::Which is	::	0
"me010"	::The hierarchy that comes with the ontology	::	1
"me010"	::is just what you want for this. So that	::	1
"me010"	::Uh, if you know about it let's say, a particular town hall	::	0
"me010"	::that, it's one that is a monument,	::	0
"me010"	::then, that would be stored there.	::	0
"me010"	::If you don't, you look up the hierarchy,	::	0
"me010"	::Eh so, you you you may or So, then you'd have this little vector of,	::	1
"me010"	::um, you know, Approach Mode or E_V_A Mode. Let's O_K, so we have the E_V_A vector for for various kinds of landmarks. If you know it for a specific landmark you put it there.	::	1
"me010"	::If you don't, you just go up the hierarchy to the first place you find one.	::	1
"me012"	::O_K.	::	0
"me012"	::So, is the idea to put it in the ontology?	::	0
"me010"	::Absolutely.	::	0
"me012"	::O_K.	::	0
"me010"	::Uh, or, link to or but but in any case View it logically as being in the ontology. It's part of what you know about	::	1
"me010"	::a an object, is its E_V_A vector.	::	1
"me012"	::O_K. Mm-hmm.	::	0
"me010"	::And, if As I say, if you know about a specific object, you put it there. This is part of what Dekai was doing.	::	0
"me010"	::So, when we get to Wu,	::	0
"me012"	::Right.	::	0
"me010"	::We'll see what he says about that.	::	0
"me010"	::And, then if you	::	0
"me010"	::If it isn't there, it's higher, and if you don't know anything except that it's a it's it's a building, then up at the highest thing, you have the what amounts to a prior.	::	0
"me010"	::If you don't know anything else about a building,	::	0
"me010"	::uh, you just take whatever your crude approximation is up at that level, which might be equal, or whatever it is.	::	0
"me012"	::Right.	::	0
"me012"	::Yeah.	::	0
"me010"	::So, that's a very pretty relationship between	::	1
"me010"	::these local vectors and the ontology.	::	1
"me010"	::And it seems to me the obvious thing to do, unless	::	0
"me010"	::we find a reason to do something different.	::	0
"me012"	::Yeah.	::	0
"me010"	::Does this make sense to you??	::	0
"me012"	::So	::	0
"me012"	::Yeah.	::	0
"me012"	::So, we are but we we're not doing the ontology, so we have to get to whoever is doing the ultimately,	::	0
"me010"	::Indeed. So, that's another thing we're gonna need to do, is is, to,	::	0
"me012"	::we have to get them to	::	0
"me010"	::either	::	0
"me010"	::We're gonna need some way to either get a tag in the ontology, or add fields, or	::	1
"me010"	::some way to associate Or, It may be that all we can do is, um, some of our own hash tables that it	::	0
"me010"	::the you know, there's always a way to do that. It's a just a question of	::	0
"me010"	::	::	0
"me003"	::Yeah, hash on object name to, you know, uh, the probabilities or whatever.	::	0
"me010"	::	::	0
"me010"	::Yeah.	::	0
"me010"	::	::	0
"me010"	::Right. And, so,	::	0
"me010"	::	::	0
"me010"	::uh	::	0
"mn015"	::But it's, uh Well, it strikes me as a What	::	0
"mn015"	::If we get the mechanism,	::	0
"mn015"	::that will be sort of the wonderful part. And then,	::	0
"mn015"	::how to make it work is is the second part, in the sense that	::	0
"mn015"	::I mean, the guy who was doing the ontology	::	0
"mn015"	::eh, eh, apologized that it will take him another through	::	0
"mn015"	::two to three days because they're having really trouble getting the upper level	::	0
"mn015"	::straight, and	::	0
"mn015"	::right now. The reason is,	::	1
"mn015"	::given the craw bet uh, the the the projects	::	0
"mn015"	::that all carry their own taxonomy and, on all history,	::	1
"mn015"	::they're really trying to build one top level ontology that covers all the E_M_L projects, and that's, uh, uh, sort of a tough cookie, a little bit tougher than they	::	1
"mn015"	::figured. I could have told them so. Uh.	::	0
"me010"	::Right. Yeah.	::	0
"mn015"	::But, nevertheless, it's going to be there by by, uh, next Monday and I will show you what's what some examples from that for towers, and stuff.	::	1
"mn015"	::And, um,	::	0
"mn015"	::what I don't think is ever going to be in the ontology, is sort of, you know, the likelihood of, eh, people entering	::	1
"mn015"	::town halls, and looking at town halls, and approaching town halls,	::	1
"mn015"	::especially since we are dealing with a case-based, not an instance-based ontology.	::	1
"mn015"	::So, there will be nothing on on that town hall, or on the Berkeley town hall, or on the	::	0
"mn015"	::Heidelberg town hall, it'll just be information on town halls.	::	0
"me010"	::Well, they they they How What are they gonna do with instances? I mean, you	::	0
"mn015"	::But what	::	0
"mn015"	::Well, that's Hhh.	::	0
"mn015"	::That's that's different question. I mean, the first, they had to make a design question,	::	0
"mn015"	::"do we take ontologies that have instances? or just one that does not, that just has the types?"	::	0
"me010"	::O_K.	::	0
"mn015"	::And, so, since the decision was on types, on a simply type-based,	::	1
"mn015"	::we now have to hook it up to instances.	::	1
"mn015"	::I mean this is	::	0
"mn015"	::one	::	0
"me010"	::But what What is SmartKom gonna do about that?	::	0
"me010"	::Cuz, they have instances all the time.	::	0
"mn015"	::Yeah, but the ontology is really not a SmartKom	::	0
"mn015"	::thing,	::	0
"mn015"	::in in and of itself. That's more something that	::	0
"mn015"	::I kicked loose	::	0
"mn015"	::in in E_M_L. So it's a completely E_M_L	::	0
"mn015"	::thing.	::	0
"me010"	::But	::	0
"me010"	::Uh uh SmartKom's gonna need an ontology.	::	0
"mn015"	::Yes, a a lot of people are aware of that.	::	0
"me010"	::I understand, but is anybody doing anything about it?	::	0
"mn015"	::Um	::	0
"me010"	::O_K. It's a political problem. We won't worry about it.	::	0
"mn015"	::No, but the eh I I still think that	::	0
"mn015"	::there is enough information in there.	::	0
"mn015"	::For example, whether O_K. So, it will know about the twenty object types there are in the world.	::	0
"mn015"	::Let's assume there are only twenty object types in this world.	::	0
"mn015"	::And it will know if any of those have institutional meanings.	::	0
"mn015"	::So, in a sense, "I" used as Institutions for some in some sense or the other.	::	0
"mn015"	::Which makes them	::	0
"mn015"	::enterable.	::	0
"mn015"	::Right? In a sense. You know.	::	0
"me010"	::Yeah.	::	0
"me010"	::Anyway. So we may have to This is with the whole thing, we may have to build another data	::	0
"mn015"	::Yep.	::	0
"mn015"	::Yep.	::	0
"me010"	::Conceptually, we know what should be done.	::	0
"me010"	::When we see what people have done, it may turn out that the easiest thing to do	::	0
"me010"	::is to build a a separate thing that that	::	0
"me010"	::just pools	::	0
"me010"	::Like, it it may be,	::	0
"me010"	::that,	::	0
"me010"	::the the instance That we have to build our own	::	0
"me010"	::instance, uh,	::	0
"me012"	::Yeah, it's Right, we can just assume	::	0
"me010"	::things, that,	::	0
"me010"	::with their types, and then it goes off to the ontology once you have its type. So we build a little data structure And so what we would do in that case,	::	0
"me010"	::is, in our instance gadget have	::	0
"me010"	::our E_V_As.	::	0
"me010"	::And if there isn't one we'd get the type and then have the E_V_As for the type. So we'd have our own little,	::	0
"me010"	::uh, E_V_A tree.	::	0
"me012"	::Yeah. Right.	::	0
"me010"	::And then, for other,	::	0
"me010"	::uh, vectors that we need. So, we'd have our own little things so that whenever we needed one, we'd just use the ontology to get the type,	::	0
"me012"	::Mm-hmm.	::	0
"me012"	::Mm-hmm.	::	0
"me010"	::and then would hash or whatever we do to say, "ah! If it's that type of thing,	::	1
"me010"	::and we want its E_V_A vector, pppt-pppt!	::	1
"me010"	::it's that. "	::	1
"me010"	::So, I think we can handle that. And then But, the combination functions,	::	1
"me010"	::and whether we can put those in Java Bayes, and all that sort of stuff,	::	1
"me010"	::is, uh is the bigger deal.	::	1
"me012"	::Yeah.	::	0
"me010"	::I think that's where we have to get technically clever.	::	0
"me012"	::Um	::	0
"me003"	::We could just steal the classes in JavaBayes and then	::	0
"me003"	::interface to them with our own code.	::	0
"me010"	::Well, I ye eh, yeah, the	::	0
"me012"	::That requires understanding the classes in JavaBayes, I guess.	::	0
"me010"	::Yeah, I mean, it's, uh, cute.	::	0
"me010"	::I mean, you've been around enough to	::	0
"me010"	::I mean	::	0
"me010"	::Just?	::	0
"me003"	::Well, it depends on	::	0
"me010"	::I mean, there's this huge package which which may or may not be consistent and you know.	::	0
"me010"	::But, yeah, we could look at it.	::	0
"me003"	::Well, I was O_K. Yeah.	::	0
"me010"	::Yeah.	::	0
"me010"	::It's It	::	0
"me010"	::It's an sort of a kind of a it The thing is, it's kind of an interpreter and it expects its data structures to	::	0
"me010"	::be in a given form, and if you say, "hey, we're gonna	::	0
"me010"	::make a different kind of data structure to stick in there	::	0
"me003"	::Well, no, but that just means there's a protocol,	::	0
"me003"	::right? That you could	::	0
"me010"	::It may or may not. I don't know. That's the question is "to what extent does it allow us to put in these G_ functions?"	::	1
"me010"	::And I don't know.	::	0
"me003"	::Well, no, but I mean What I uh the	::	0
"me003"	::So you could have four different Bayes-nets that you're running, and then run your own write your own function that would take the output of those four,	::	0
"me003"	::and make your own "G_ function", is what I was saying.	::	0
"me010"	::Yeah, that's fine if it's if it comes only at the end. But suppose you want it embedded?	::	0
"me003"	::Well, then you'd have to break all of your Bayes-nets into smaller Bayes-nets, with all the	::	0
"me010"	::Oh, that Yeah, that's a truly horrible way to do it. One would hope	::	0
"me003"	::Yeah, but I'm just	::	0
"mn015"	::Mm-hmm.	::	0
"me010"	::Yeah, yeah, yeah, yeah, yeah, you bet.	::	0
"me010"	::But, at that point you may say, "hey, Java Bayes isn't the only package in town. Let's see if there's	::	0
"me010"	::another package that's, eh, more civilized about this."	::	0
"me012"	::.	::	0
"me010"	::Now, Srini	::	0
"me012"	::Mmm.	::	0
"me010"	::is worth talking to on this,	::	0
"me010"	::cuz he	::	0
"me010"	::said that he actually did	::	0
"me010"	::hack some combining functions into JavaBayes.	::	0
"me012"	::Ah!	::	0
"me010"	::But he doesn't remember at least when I talked to him, he didn't remember	::	0
"me010"	::whether it was an an easy thing, a natural thing, or whether he had to do some violence to it to make it work.	::	0
"me010"	::Uh. But he did do it.	::	0
"me012"	::Yeah.	::	0
"me012"	::I don't see why the, uh, combining functions have to be directly hacked into JavaBayes. I mean, they're used to create tables so we can just make our own little functions that create tables in X_M_L.	::	1
"me010"	::Well, I say that's one way to do it, is is to just convert it	::	0
"me010"	::into a into a C_P_ T that you zip	::	0
"me010"	::It's blown up, and is a it's, uh it's huge, but	::	0
"me010"	::it doesn't require any	::	0
"me012"	::Mm-hmm.	::	0
"me010"	::data fitting or complication.	::	0
"me012"	::Yeah.	::	0
"me012"	::I don't think I mean, the fact that it blown blows up is a huge issue in the sense that	::	0
"me012"	::I mean, O_K. So say it blows up, right? So there's, like,	::	0
"me012"	::the	::	0
"me012"	::you know, ten, ten, fifteen, uh, things. It's gonna be like, two to the	::	0
"me012"	::that, which isn't so bad.	::	0
"me010"	::I understand. I'm just saying that	::	0
"me010"	::That was that was my note.	::	0
"me010"	::The little note I sent said that.	::	0
"me012"	::Mm-hmm.	::	0
"me010"	::It said, "Here's the way you'd take	::	0
"me010"	::the logical G_ function and turn it into a C_P_T."	::	0
"me012"	::Mm-hmm.	::	0
"me010"	::I mean that the the Evidence-Combining function.	::	0
"me010"	::So we could do that. And maybe that's what we'll do.	::	0
"me010"	::But, um	::	0
"me010"	::don't know.	::	0
"me010"	::So, I will, before next week, uh,	::	0
"me010"	::push push some more on on this stuff that Dekai Wu did,	::	0
"me010"	::and try to understand it.	::	0
"me010"	::Uh, you'll make a couple of more copies of the Heckerman paper to give	::	0
"me012"	::Sure.	::	0
"mn036"	::Yeah, I I would like a copy, yeah.	::	0
"me010"	::to people?	::	0
"me012"	::O_K.	::	0
"me010"	::O_K.	::	0
"mn036"	::O_K.	::	0
"me010"	::And, um	::	0
"me010"	::I think	::	0
"mn015"	::O_K. And I'll I'll think through this, uh,	::	1
"mn015"	::eh getting EVA vectors dynamically out of ontologies one more time because I I I I'm not quite sure whether we all think of the same thing or not, here.	::	1
"me010"	::Well, you and I should talk about it.	::	1
"mn015"	::Yeah, uh-huh.	::	0
"mn015"	::O_K.	::	0
"me010"	::Alright, great!	::	0
"me010"	::And, Robert, thank you for	::	0
"me010"	::coming in	::	0
"me010"	::under He he's been sick, Robert.	::	0
"mn015"	::Und.	::	0
"fe004"	::Mm-hmm.	::	0
"me003"	::I was thinking maybe we should just cough into the microphone and see if they can't see if they can handle it.	::	0
"me012"	::Yep.	::	0
"fe004"	::Sure.	::	0
"mn015"	::Um is this, uh	::	0
